=============================================================
Testing matrix_divided function from 2-matrix_divided.py file
============================================================

``matrix_divided()`` returns a new matrix whose elements are result of
a division of elements of another matrix by a number.

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

matrix is not a list of lists
=============================
::
	>>> matrix = [{1, 2, 3}, {4, 5, 6}]
	>>> matrix_divided(matrix, 2)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

matrix is not a list of lists of integer/float elements
======================================================= 
::
	>>> matrix = [[1, 2, 3], ['a', 4, 6]]
	>>> matrix_divided(matrix, 2)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix = [[1, True, 3], [4, 5, 6]]
	>>> matrix_divided(matrix, 2)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

matrix contain list of different sizes
======================================
::
	>>> matrix = [[1, 2, 3, 4], [5, 6]]
	>>> matrix_divided(matrix, 2)
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size

matrix and div are ok
=================================
::
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix, 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

div is not an integer/float
===========================
::
	>>> matrix_divided(matrix, 'not an integer')
	Traceback (most recent call last):
	TypeError: div must be a number

	>>> matrix_divided(matrix, True)
	Traceback (most recent call last):
	TypeError: div must be a number

div is 0
========
::
	>>> matrix_divided(matrix, 0)
	Traceback (most recent call last):
	ZeroDivisionError: division by zero

div missing
===========
::
	>>> matrix_divided(matrix)
	Traceback (most recent call last):
	TypeError: matrix_divided() missing 1 required positional argument: 'div'

matrix missing
===============
::
`	>>> matrix_divided(div=3)
	Traceback (most recent call last):
	TypeError: matrix_divided() missing 1 required positional argument: 'matrix'


div and matrix missing
======================
::	
	>>> matrix_divided()
	Traceback (most recent call last):
	TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'


div is float(inf)
================
::
	>>> matrix_divided(matrix, 10E100000000000000000000000000000000000000000000000) 
	[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]
